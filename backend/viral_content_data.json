{
  "contents": [
    {
      "id": "76bc2b17-b6b9-485f-992c-456fae74e966",
      "title": "Astrophysicist on Vibe Coding (2 minutes)",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nqui4m/astrophysicist_on_vibe_coding_2_minutes/",
      "content_text": "",
      "author": "fredoverflow",
      "published_date": "2025-09-26 03:57:13",
      "scraped_date": "2025-09-26 16:45:05.233669",
      "engagement_metrics": {
        "views": 650,
        "likes": 0,
        "comments": 150,
        "shares": 0,
        "upvotes": 65,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 99.23076923076923,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "2377088f-2092-4f88-9810-d9b90d6ea082",
      "title": "Simple Supply-Chain Attack Guardrails for npm, pnpm, and Yarn",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nr7am5/simple_supplychain_attack_guardrails_for_npm_pnpm/",
      "content_text": "",
      "author": "coinspect",
      "published_date": "2025-09-26 14:20:59",
      "scraped_date": "2025-09-26 19:21:24.115435",
      "engagement_metrics": {
        "views": 10,
        "likes": 0,
        "comments": 1,
        "shares": 0,
        "upvotes": 1,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 60.0,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "8a1cbb01-b665-4fc9-b595-45804f6de05e",
      "title": "Iterating strings and manually decoding UTF-8",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nrerjs/iterating_strings_and_manually_decoding_utf8/",
      "content_text": "",
      "author": "ketralnis",
      "published_date": "2025-09-26 19:22:19",
      "scraped_date": "2025-09-27 11:25:24.688136",
      "engagement_metrics": {
        "views": 40,
        "likes": 0,
        "comments": 2,
        "shares": 0,
        "upvotes": 4,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 45.0,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "56fa2178-4da5-4a35-8b30-608e1a3a279d",
      "title": "1 Bit is all we need: Binary Normalized Neural Networks",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nqxo66/1_bit_is_all_we_need_binary_normalized_neural/",
      "content_text": "",
      "author": "GarethX",
      "published_date": "2025-09-26 07:22:10",
      "scraped_date": "2025-09-26 16:45:05.233610",
      "engagement_metrics": {
        "views": 1230,
        "likes": 0,
        "comments": 38,
        "shares": 0,
        "upvotes": 123,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 39.268292682926834,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "abd4cb9c-e0aa-4ab8-b830-90599411b004",
      "title": "Our plan for a more secure npm supply chain",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nr6ouy/our_plan_for_a_more_secure_npm_supply_chain/",
      "content_text": "",
      "author": "beyphy",
      "published_date": "2025-09-26 13:58:04",
      "scraped_date": "2025-09-26 16:45:05.233717",
      "engagement_metrics": {
        "views": 100,
        "likes": 0,
        "comments": 3,
        "shares": 0,
        "upvotes": 10,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 39.0,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "5d91b118-6807-4da4-ae5b-0243f154a323",
      "title": "OpenAPI 3.2.0 released: Evolving with Modern API Patterns",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nr9hnj/openapi_320_released_evolving_with_modern_api/",
      "content_text": "",
      "author": "AntonOkolelov",
      "published_date": "2025-09-26 15:47:21",
      "scraped_date": "2025-09-26 19:21:24.115052",
      "engagement_metrics": {
        "views": 40,
        "likes": 0,
        "comments": 1,
        "shares": 0,
        "upvotes": 4,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 37.5,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "05f20b57-9eea-453b-acf8-7a6f33bec780",
      "title": "Go Maps Deep Dive - The Secrets Behind O(1) Performance, Overflows, and Growth",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nrerby/go_maps_deep_dive_the_secrets_behind_o1/",
      "content_text": "",
      "author": "ketralnis",
      "published_date": "2025-09-26 19:22:03",
      "scraped_date": "2025-09-27 11:25:24.688184",
      "engagement_metrics": {
        "views": 40,
        "likes": 0,
        "comments": 1,
        "shares": 0,
        "upvotes": 4,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 37.5,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "f0e1c44b-c0c9-441b-baef-8ea4e77fe51d",
      "title": "Australia might restrict GitHub over damage to kids, internet laughs",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nr7zh5/australia_might_restrict_github_over_damage_to/",
      "content_text": "",
      "author": "BillWilberforce",
      "published_date": "2025-09-26 14:47:44",
      "scraped_date": "2025-09-26 16:45:05.233476",
      "engagement_metrics": {
        "views": 1890,
        "likes": 0,
        "comments": 47,
        "shares": 0,
        "upvotes": 189,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 37.46031746031746,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "5adc2291-02b7-4f16-815b-037a6c955f3e",
      "title": "Decision Log: Why writing down your technical choices is a game-changer",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nqgn7x/decision_log_why_writing_down_your_technical/",
      "content_text": "",
      "author": "dmp0x7c5",
      "published_date": "2025-09-25 16:47:55",
      "scraped_date": "2025-09-26 19:21:24.115097",
      "engagement_metrics": {
        "views": 1420,
        "likes": 0,
        "comments": 35,
        "shares": 0,
        "upvotes": 142,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 37.394366197183096,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "53fbdfe9-ff33-4650-9c4c-60a3f4061469",
      "title": "PostgreSQL 18 Released \u2014 pgbench Results Show It\u2019s the Fastest Yet",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nrw3p3/postgresql_18_released_pgbench_results_show_its/",
      "content_text": "I just published a benchmark comparison across PG versions 12\u201318 using pgbench mix tests:\n\n[https://pgbench.github.io/mix/](https://pgbench.github.io/mix/)\n\nPG18 leads in every metric:\n\n* **3,057 TPS** \u2014 highest throughput\n* **5.232 ms latency** \u2014 lowest response time\n* **183,431 transactions** \u2014 most processed\n\nThis is synthetic, but it\u2019s a strong signal for transactional workloads. Would love feedback from anyone testing PG18 in production\u2014any surprises or regressions?",
      "author": "OzkanSoftware",
      "published_date": "2025-09-27 11:05:26",
      "scraped_date": "2025-09-27 11:25:24.687746",
      "engagement_metrics": {
        "views": 70,
        "likes": 0,
        "comments": 1,
        "shares": 0,
        "upvotes": 7,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 34.285714285714285,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "d72b94ad-7f31-4689-abaa-4613ae495f94",
      "title": "Ruby Central executes hostile takeover of the RubyGems github organisation and code repositories",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nrbh25/ruby_central_executes_hostile_takeover_of_the/",
      "content_text": "",
      "author": "ivosaurus",
      "published_date": "2025-09-26 17:04:29",
      "scraped_date": "2025-09-26 19:21:24.114816",
      "engagement_metrics": {
        "views": 280,
        "likes": 0,
        "comments": 3,
        "shares": 0,
        "upvotes": 28,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 33.214285714285715,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "679afadb-69a8-4de8-8c0d-4ce235befab7",
      "title": "PostgreSQL 18 Released!",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nq6g8p/postgresql_18_released/",
      "content_text": "",
      "author": "jskatz05",
      "published_date": "2025-09-25 10:14:23",
      "scraped_date": "2025-09-26 16:45:05.233761",
      "engagement_metrics": {
        "views": 7390,
        "likes": 0,
        "comments": 48,
        "shares": 0,
        "upvotes": 739,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 31.948579161028416,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "403a3ced-7087-49d1-95ea-9f92798c41d2",
      "title": "Postgres 18: OLD and NEW Rows in the RETURNING Clause",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nqjuck/postgres_18_old_and_new_rows_in_the_returning/",
      "content_text": "",
      "author": "craigkerstiens",
      "published_date": "2025-09-25 18:55:43",
      "scraped_date": "2025-09-26 19:21:24.115308",
      "engagement_metrics": {
        "views": 850,
        "likes": 0,
        "comments": 3,
        "shares": 0,
        "upvotes": 85,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 31.058823529411768,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "53f621a9-54ad-4dc8-9c9b-33d520226516",
      "title": "[ Removed by Reddit ]",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nrep5e/removed_by_reddit/",
      "content_text": "[ Removed by Reddit on account of violating the [content policy](/help/contentpolicy). ]",
      "author": "ketralnis",
      "published_date": "2025-09-26 19:19:17",
      "scraped_date": "2025-09-26 19:21:24.115143",
      "engagement_metrics": {
        "views": 10,
        "likes": 0,
        "comments": 0,
        "shares": 0,
        "upvotes": 1,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 30.0,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "4f0a56a1-640f-4b90-9d8a-ff0c179e4a39",
      "title": "Turning Billions of Strings into Integers Every Second Without Collisions",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nreor8/turning_billions_of_strings_into_integers_every/",
      "content_text": "",
      "author": "ketralnis",
      "published_date": "2025-09-26 19:18:48",
      "scraped_date": "2025-09-26 19:21:24.115185",
      "engagement_metrics": {
        "views": 10,
        "likes": 0,
        "comments": 0,
        "shares": 0,
        "upvotes": 1,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 30.0,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "61748227-7610-42eb-add4-941cc1739672",
      "title": "Translating a Fortran F-16 Simulator to Unity3D",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nreolg/translating_a_fortran_f16_simulator_to_unity3d/",
      "content_text": "",
      "author": "ketralnis",
      "published_date": "2025-09-26 19:18:36",
      "scraped_date": "2025-09-26 19:21:24.115225",
      "engagement_metrics": {
        "views": 10,
        "likes": 0,
        "comments": 0,
        "shares": 0,
        "upvotes": 1,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 30.0,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "c761041d-d410-4d19-820d-318b58450708",
      "title": "Visual Online Builder/Estimator",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nrei6l/visual_online_builderestimator/",
      "content_text": "Any one have a program to build a 3D visual of carports? My buddy has a carport business and the way he has his site set up is more work  on my end to visualize orders for customers. \n\nIve seen other sites with it but if anyone has a royalty free version we can implement to the site even if its just visually as we can estimate it off the size and details. \n\nIm sure we can work something out on compensation but i doubt building an ne from scratch would be feasible as he wants to keep it affordable on his end. \n\nLet me know if anyone has any info or if they know of a low cost plug in program we can utilize. \n\nHe is using wix as his host and site builder. \n\nThanks! Any help in the right direction would be a great help as well! Im helping on the sales side and would benefit me and my sales reps under me. \n\nI linked a similar sites 3D estimator wed like to have something similar to. \n\nEx: Any plug ins already available that are affordable.\n\nPermanent programs we can drag and drop onto the site. (If the price is doable im sure i can convince him to buy the program) \n\nOr whatever you guys think. Thanks \n\nIf this is the wrong sub let me know where I can repost this to get better help. Thanks!\n\n",
      "author": "619xWelder",
      "published_date": "2025-09-26 19:10:26",
      "scraped_date": "2025-09-26 19:21:24.115268",
      "engagement_metrics": {
        "views": 10,
        "likes": 0,
        "comments": 0,
        "shares": 0,
        "upvotes": 1,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 30.0,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "554523b6-2342-460d-a04e-05afc87adcfa",
      "title": "From Full stack to Full Team stack",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nrd0os/from_full_stack_to_full_team_stack/",
      "content_text": "Hello fellow gladiators,\n\nI conducted deep research  for a comparative analysis of the software engineering environment from 2000 to 2025 and the report is in the Google Drive. But I want to discuss the current software engineering environment.\n\nI've been absent from the software engineering scene for 4 years now, and I returned, and the amount of my shock at how it has become so notoriously difficult is like a gladiator's arena.\n\nA software engineer not only needs to be full-stack, but \\*\\*full-team stack (\\*\\*I hope this term not be used in hiring);\n\n1. front-end with at least two or three frameworks \"mastery\" (React, Angular, Vue.js...) for JavaScript, and frameworks for CSS too with UI/UX knowledge and experience\n2. With backend three or four mastery (C/C++, Python, Java, C#, NodeJS, now Rust ...) with each one of the languages needing mastery of one or two frameworks that each have.\n3. Need to have Cloud mastery too (AWS, Azure, Google Cloud...),\n4. DevOps Docker, Kubernetes, CI/CD are the most basic tools, even to be called a software engineer at the entry-level.\n5. databases at least one or two SQL and two NoSQL: (SQL server, MySQL ,PL/SQL, MongoDB, Redis, Cassandra...)\n6. Quality and test assurance\n7. MLOps also with all that  ML/AI/DL \"fundamental knowledge\" (TensorFlow, Keras,nlp...)\n8. Maybe Networking knowledge with Cisco professional certificate aimed for at least mid-seniority\n\nHere is an example, this is for an entry-level\n\n&gt;**A Bachelor\u2019s Degree**Successful engineer in this role have majored in computer science and related fieldsGPA above 3.7  \n**A**\u00a0**Few Related Skills and Experiences**(This is an entry-level role, and experience in every one of these areas is not required - training is provided on all core platforms, tools, and technologies you will need to know! But the following skills/experience are awesome to have, and will help get your career off to a running start:):  \nPart-time/Full-time/summer job/internship experience is a must  \nExperience with open-source web development  \nExperience with web-based programming languages (JavaScript, HTML, etc.)  \nProject-level experience with at least one JavaScript-based project  \nExperience with Cloud Computing Programs, Google Cloud Platform, AWS, Azure, etc.  \nExperience with OOP and procedural programming methodologies  \nUnderstanding of software development life-cycles and best practices  \nKnowledge of standard-compliant HTML, CSS, and Javascript  \nDatabase experience (MySQL, Google BigQuery)  \nExperience with CCS Frameworks (Bootstrap, Foundation, Intuit, etc.)  \nExperience with JS Frameworks (JQuery, React, Vue, Backbone, etc.)  \nExperience with Git Version control (or other version control software)  \nExperience with package management and Task Runners (NPM, Yarn, Gulp, Grunt)  \nExperience with browser testing using built-in developer toolsFamiliarity with TensorFlow and Machine Learning  \nExperience with NodeJSExperience with SaaS monitoring software such as DataDog  \nExperience with data management using data pipeline toolsPrevious agency experience  \n**Any of these Signature of our Traits!**  \nYou\u2019re passionate about web/software development -  \n***\"you even find yourself spending your free time tinkering and learning new technologies!\"(Should the canditat breath too? Or inhale and exhale assembly code?)***  \nYou\u2019re comfortable with both object-oriented and procedural programming methodologies  \nYou\u2019re committed to delivering high-quality projects for clients  \nYou enjoy variety, and like the challenge of working on multiple projects  \nYou\u2019re comfortable working both independently and as part of a team  \nYou take direction well, but aren\u2019t afraid to take initiative and make decisions  \nYou see yourself as a problem-solver, and face challenges with a can-do mindset  \nYou put the customer and their goals firstYou have an interest in the web and stay up-to-date on new and developing technologies  \nYou are a professional, dependable, and independent worker with a solid work ethic  \nYou\u2019re self-motivated, thrive on challenges, and enjoy getting things done  \nYou have an eye for detail and dedication to high-quality work  \nYou have an exceptional level of follow-through  \nYou possess excellent time/project management skills  \nYou work with a sense of urgency and can consistently meet deadlines  \nYou are an outstanding communicator and possess strong interpersonal skills  \nYou are a lifelong learner who loves to grow and stretch outside of your comfort zone, and are always looking to improve your skills ***(After all those skills that the candidat have I am sure he will not need any advancement as entry level)***\n\nSo a software engineer needs to be full-stack + Designer UI/UX+ Cloud architect + DevOps + Databases administrator + MLOPS + maybe network engineer + Quality assurance engineer + cyberOps as a plus. All of those have previously had a dedicated engineer to work full-time on in a team, except the new MLOps, now the companies want all in one person and say, \"you can and you will use AI, and when the task fails with severe security unseen bug or general architecture breakdown, the human is to blame!\"\n\nNo wonder there is senior burnout, and if we keep cutting entry-level jobs, there will be no more quality future engineers and the software industry will suffer, bringing with it all other industries due to a lack of software engineers.\n\nIt's like wanting a doctor who is brain, heart, bones... surgeon, also every organ in the body doctor, also at the same time a pharmacist, biologist... because all have the same common root.\n\nWhat is this madness? Companies greed? And worst of all, probably students who still in universities will change their majors because of the amount of skills needed with open source experience and the hostility in the work environment if they get a job, and current graduates will regret the effort and the hard work they made to have a degree in computer science in the first place, and just work in another domain.\n\nThis will cut the new graduates and newcomers to software engineering, and the catastrophe will happen, degrade software quality for all of us and software is used almost in all industries from agriculture to cars and airplanes to medical machines, and we will not have the quality or number of engineers who will maintain our industries and ecosystem because there is not enough new ones to land and job and have experience and most of all the passion for programming will vanish from all the rest of us!\n\n**Also, maybe in 2-5 years, if all continues like this, we will say software engineering has peaked by 2025, then went downhill fast.**",
      "author": "maher1717",
      "published_date": "2025-09-26 18:06:10",
      "scraped_date": "2025-09-26 19:21:24.115479",
      "engagement_metrics": {
        "views": 10,
        "likes": 0,
        "comments": 0,
        "shares": 0,
        "upvotes": 1,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 30.0,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "610dc2f6-c720-4695-80a0-210883d09eaf",
      "title": "How Kafka Really Works",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nr6zhk/how_kafka_really_works/",
      "content_text": "",
      "author": "sh_tomer",
      "published_date": "2025-09-26 14:08:57",
      "scraped_date": "2025-09-26 19:21:24.115521",
      "engagement_metrics": {
        "views": 20,
        "likes": 0,
        "comments": 0,
        "shares": 0,
        "upvotes": 2,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 30.0,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "5b851dcd-c617-4076-81b4-beffda65a6ec",
      "title": "Video in which I go over physics, asset rendering, and AABB collision detection for my own indie Custom C++ 2D Game Engine",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nrojl7/video_in_which_i_go_over_physics_asset_rendering/",
      "content_text": "This is a devlog that follows an update to a previous feature that I added to my game Galatic Inc. It involves its own gravity system, its own rendering system, as well it's own click detection and collision resolution.\n\nThe following is a link to the github for the project:\n\n[https://github.com/NateTheGrappler](https://github.com/NateTheGrappler)\n\n  \nThis is the a download of the actual game:\n\n[https://natethecoder.itch.io/galatic-inc](https://natethecoder.itch.io/galatic-inc)",
      "author": "CommercialStrike9439",
      "published_date": "2025-09-27 03:57:44",
      "scraped_date": "2025-09-27 11:25:24.687948",
      "engagement_metrics": {
        "views": 50,
        "likes": 0,
        "comments": 0,
        "shares": 0,
        "upvotes": 5,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 30.0,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "8383666f-1b47-4438-b159-b56653325e08",
      "title": "Flight Recorder in Go 1.25",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nrepm8/flight_recorder_in_go_125/",
      "content_text": "",
      "author": "ketralnis",
      "published_date": "2025-09-26 19:19:52",
      "scraped_date": "2025-09-27 11:25:24.688090",
      "engagement_metrics": {
        "views": 80,
        "likes": 0,
        "comments": 0,
        "shares": 0,
        "upvotes": 8,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 30.0,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "0e8f2aa7-ec25-4c1b-9a02-511c83fc5908",
      "title": "The PGM-index",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nres1z/the_pgmindex/",
      "content_text": "",
      "author": "ketralnis",
      "published_date": "2025-09-26 19:22:55",
      "scraped_date": "2025-09-27 11:25:24.688370",
      "engagement_metrics": {
        "views": 20,
        "likes": 0,
        "comments": 0,
        "shares": 0,
        "upvotes": 2,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 30.0,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "0dddecfe-963c-4467-b622-f4ad0c0be58f",
      "title": "What are some modern language features you feel are consistently underutilized in your projects?",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nrpi32/what_are_some_modern_language_features_you_feel/",
      "content_text": "I've been thinking about this a lot in the context of C# lately. I see so many projects that could be dramatically simplified by using modern features like pattern matching and `init` setters, but for some reason, they're just not part of the standard toolkit for many developers.\n\nFor me, record types are a huge one. They've completely changed how I handle immutable data objects by eliminating all the boilerplate.\n\nWhat about in your primary language? What's a feature that you use all the time, but seems to be overlooked by others?",
      "author": "riturajpokhriyal",
      "published_date": "2025-09-27 04:58:46",
      "scraped_date": "2025-09-27 11:25:24.688724",
      "engagement_metrics": {
        "views": 0,
        "likes": 0,
        "comments": 16,
        "shares": 0,
        "upvotes": 0,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 0.048,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "58a15207-3bcc-4cae-9a33-48865f0660e7",
      "title": "Seniors, what's your \"one piece of advice\" for juniors? Here's mine after 10 years: Your biggest growth blocker isn't technical.",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nrt2vy/seniors_whats_your_one_piece_of_advice_for/",
      "content_text": "Hey everyone,\n\nI'm a senior dev with few years of experience, mostly in the .NET world. I've had the chance to mentor a lot of junior developers, and I've noticed a pattern that has nothing to do with their coding ability.\n\nThe single biggest mistake I see is the **silent struggle**.\n\nWe've all been there. You're stuck on a problem for hours, browser full of purple Stack Overflow links, feeling that slow-burning panic of imposter syndrome. You tell yourself, \"I just need to figure this out on my own, or they'll think I'm incompetent.\"\n\nThis is a trap. Your goal as a developer on a team isn't to be a solo hero; it's to help solve problems efficiently. Wasting a whole day on a problem that a teammate could unblock in 10 minutes isn't a good use of anyone's time.\n\nLearning to ask for help is a skill, not a weakness. Here's the simple protocol I teach to get unblocked without wasting time:\n\n* **1. The 45-Minute Rule:** Give the problem a solid, focused effort for 45 minutes. Do your homework, use the debugger, and try to isolate the issue. If you're not making real progress by then, it's time to escalate.\n* **2. Document Your Journey:** Before you ask, write a quick summary. What's the goal? What did you try? What was the result? (Bonus: a lot of the time, just doing this will help you find the solution yourself).\n* **3. Prepare the \"Ask\":** Get everything ready\u2014a link to the code branch, the exact error message, and a clear question. Make it easy for someone to help you.\n* **4. Use Async First:** Send a well-crafted Slack/Teams message instead of interrupting. \"Hey, when you have a spare moment, could you look at this? I've tried X and Y. No rush.\" This respects their focus.\n\nAdopting this mindset is the fastest way to accelerate your learning and become a more valuable member of your team. We seniors would much rather spend 10 minutes helping you now than 2 hours untangling a bigger mess later.\n\nI wrote a more detailed post about the psychology behind this and why it's so important for your career. \n\nWhat's your single biggest piece of advice for new developers?",
      "author": "Numerous_Hair3868",
      "published_date": "2025-09-27 08:41:45",
      "scraped_date": "2025-09-27 11:25:24.688508",
      "engagement_metrics": {
        "views": 0,
        "likes": 0,
        "comments": 5,
        "shares": 0,
        "upvotes": 0,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 0.015,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "ae2e8272-e3ee-47ed-8cb2-7ec801059996",
      "title": "The Untold Story of the Swift Language",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nrdokz/the_untold_story_of_the_swift_language/",
      "content_text": "",
      "author": "BlueGoliath",
      "published_date": "2025-09-26 18:34:45",
      "scraped_date": "2025-09-26 19:21:24.115352",
      "engagement_metrics": {
        "views": 0,
        "likes": 0,
        "comments": 1,
        "shares": 0,
        "upvotes": 0,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 0.003,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "c03e00b7-f6f7-4ae0-9c70-72c02b84e8b9",
      "title": "The most efficient way to do nothing [RPCS3]",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nra28r/the_most_efficient_way_to_do_nothing_rpcs3/",
      "content_text": "",
      "author": "Whatcookie_",
      "published_date": "2025-09-26 16:09:16",
      "scraped_date": "2025-09-26 19:21:24.115601",
      "engagement_metrics": {
        "views": 0,
        "likes": 0,
        "comments": 1,
        "shares": 0,
        "upvotes": 0,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 0.003,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "f07df3d1-4e50-49bd-a498-763e7dd4ea5d",
      "title": "Understanding Floating-Point Numbers",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nriyvn/understanding_floatingpoint_numbers/",
      "content_text": "",
      "author": "PerfunctoryComments",
      "published_date": "2025-09-26 22:43:18",
      "scraped_date": "2025-09-27 11:25:24.688415",
      "engagement_metrics": {
        "views": 0,
        "likes": 0,
        "comments": 1,
        "shares": 0,
        "upvotes": 0,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 0.003,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "ef0b00b6-bb84-4fad-a4d1-3d503ca64ac7",
      "title": "Let's talk about alignment, sizing and packing in Zig, C, Rust and... Go?",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nrdhf2/lets_talk_about_alignment_sizing_and_packing_in/",
      "content_text": "",
      "author": "BlueGoliath",
      "published_date": "2025-09-26 18:26:09",
      "scraped_date": "2025-09-26 19:21:24.115394",
      "engagement_metrics": {
        "views": 0,
        "likes": 0,
        "comments": 0,
        "shares": 0,
        "upvotes": 0,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 0.0,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    },
    {
      "id": "0ef90e50-6aa9-4835-8b0e-1159c1c09974",
      "title": "Dial-a-Precision Prime Search with 100% Recall",
      "platform": "reddit",
      "content_type": "post",
      "url": "https://reddit.com/r/programming/comments/1nra46w/dialaprecision_prime_search_with_100_recall/",
      "content_text": "&gt;\n\n# Abstract\n\nThis is a\u00a0**recall-perfect**\u00a0pipeline for prime number searches that lets you\u00a0**dial the precision**\u00a0with two knobs: a scale-aware\u00a0**wheel sieve**\u00a0bound\u00a0`B(n)`\u00a0and the number of\u00a0**Miller\u2013Rabin**\u00a0bases\u00a0`k`. Step 1 is a high-recall prefilter (the \u201c**Purple Stripe**\u201d: numbers\u00a0`n`\u00a0where\u00a0`n mod 6`\u00a0is 1 or 5). Step 2 adds\u00a0**anti-helices**\u00a0(a wheel built from small primes) whose filtering strength grows with the number\u00a0`n`\u00a0being tested. Step 3 runs a short chain of\u00a0**one-sided**\u00a0tests (they never reject a true prime), ending with a few MR bases. The result:\u00a0**recall is 100%**\u00a0by design, and\u00a0**precision**\u00a0jumps to\u00a0**97\u201399%**\u00a0with just 2\u20133 MR bases and can be pushed arbitrarily close to 100%.\n\n# 1. The Core Idea\n\n* Beyond 3, every prime number is of the form\u00a0**6k +/- 1**. We call this the\u00a0**purple stripe**.\n* Composites on this stripe appear when a number is a multiple of a small prime (like 5, 7, 11, etc.).\n* The density of prime numbers decreases as numbers get larger (it\u2019s about\u00a0**1 / ln(n)**). To maintain high\u00a0**precision**, the wheel\u2019s filtering strength must increase with\u00a0`n`\u00a0by excluding multiples of more small primes.\n\nThis isn\u2019t new number theory; it\u2019s a clean engineering approach that combines wheel sieves with the Prime Number Theorem to give you precise control over the trade-off between precision and computational cost.\n\nFor more go to the above link to medium.",
      "author": "caprazli",
      "published_date": "2025-09-26 16:11:16",
      "scraped_date": "2025-09-26 19:21:24.115561",
      "engagement_metrics": {
        "views": 0,
        "likes": 0,
        "comments": 0,
        "shares": 0,
        "upvotes": 0,
        "downvotes": 0,
        "engagement_rate": 0.0
      },
      "viral_score": 0.0,
      "tags": [
        "programming"
      ],
      "thumbnail_url": ""
    }
  ],
  "last_updated": "2025-09-27T11:29:40.336243"
}